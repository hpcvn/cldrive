kernel void sgemmNN(global const float* A, int lda, global const float* B, int ldb, global float* C, int ldc, int k, float alpha, float beta) {
  const int inx = get_local_id(0);
  const int iny = get_local_id(1);
  const int ibx = get_group_id(0) * 64;
  const int iby = get_group_id(1) * 16;
  const int id = inx + iny * 16;

  int i, j, ii, counter = 0;

  A += ibx + id;

  B += inx + (iby + iny) * ldb;

  C += ibx + id + (iby * ldc);

  float c[16];
  for (i = 0; i < 16; ++i) {
    c[i] = 0.0;
  }

  local float bs[16][17];

  do {
   private
    float a[4];
    for (ii = 0; ii < 4; ++ii) {
      a[ii] = A[ii * lda];
    }

    bs[inx][iny] = B[0 * ldb];
    bs[inx][iny + 4] = B[4 * ldb];
    bs[inx][iny + 8] = B[8 * ldb];
    bs[inx][iny + 12] = B[12 * ldb];
    barrier(0x01);

    A += 4 * lda;

    do {
      c[0] += a[0] * bs[0][0];
      c[1] += a[0] * bs[0][1];
      c[2] += a[0] * bs[0][2];
      c[3] += a[0] * bs[0][3];
      c[4] += a[0] * bs[0][4];
      c[5] += a[0] * bs[0][5];
      c[6] += a[0] * bs[0][6];
      c[7] += a[0] * bs[0][7];
      c[8] += a[0] * bs[0][8];
      c[9] += a[0] * bs[0][9];
      c[10] += a[0] * bs[0][10];
      c[11] += a[0] * bs[0][11];
      c[12] += a[0] * bs[0][12];
      c[13] += a[0] * bs[0][13];
      c[14] += a[0] * bs[0][14];
      c[15] += a[0] * bs[0][15];
    } while (0);
    a[0] = A[0 * lda];
    do {
      c[0] += a[1] * bs[1][0];
      c[1] += a[1] * bs[1][1];
      c[2] += a[1] * bs[1][2];
      c[3] += a[1] * bs[1][3];
      c[4] += a[1] * bs[1][4];
      c[5] += a[1] * bs[1][5];
      c[6] += a[1] * bs[1][6];
      c[7] += a[1] * bs[1][7];
      c[8] += a[1] * bs[1][8];
      c[9] += a[1] * bs[1][9];
      c[10] += a[1] * bs[1][10];
      c[11] += a[1] * bs[1][11];
      c[12] += a[1] * bs[1][12];
      c[13] += a[1] * bs[1][13];
      c[14] += a[1] * bs[1][14];
      c[15] += a[1] * bs[1][15];
    } while (0);
    a[1] = A[1 * lda];
    do {
      c[0] += a[2] * bs[2][0];
      c[1] += a[2] * bs[2][1];
      c[2] += a[2] * bs[2][2];
      c[3] += a[2] * bs[2][3];
      c[4] += a[2] * bs[2][4];
      c[5] += a[2] * bs[2][5];
      c[6] += a[2] * bs[2][6];
      c[7] += a[2] * bs[2][7];
      c[8] += a[2] * bs[2][8];
      c[9] += a[2] * bs[2][9];
      c[10] += a[2] * bs[2][10];
      c[11] += a[2] * bs[2][11];
      c[12] += a[2] * bs[2][12];
      c[13] += a[2] * bs[2][13];
      c[14] += a[2] * bs[2][14];
      c[15] += a[2] * bs[2][15];
    } while (0);
    a[2] = A[2 * lda];
    do {
      c[0] += a[3] * bs[3][0];
      c[1] += a[3] * bs[3][1];
      c[2] += a[3] * bs[3][2];
      c[3] += a[3] * bs[3][3];
      c[4] += a[3] * bs[3][4];
      c[5] += a[3] * bs[3][5];
      c[6] += a[3] * bs[3][6];
      c[7] += a[3] * bs[3][7];
      c[8] += a[3] * bs[3][8];
      c[9] += a[3] * bs[3][9];
      c[10] += a[3] * bs[3][10];
      c[11] += a[3] * bs[3][11];
      c[12] += a[3] * bs[3][12];
      c[13] += a[3] * bs[3][13];
      c[14] += a[3] * bs[3][14];
      c[15] += a[3] * bs[3][15];
    } while (0);
    a[3] = A[3 * lda];

    A += 4 * lda;
    do {
      c[0] += a[0] * bs[4][0];
      c[1] += a[0] * bs[4][1];
      c[2] += a[0] * bs[4][2];
      c[3] += a[0] * bs[4][3];
      c[4] += a[0] * bs[4][4];
      c[5] += a[0] * bs[4][5];
      c[6] += a[0] * bs[4][6];
      c[7] += a[0] * bs[4][7];
      c[8] += a[0] * bs[4][8];
      c[9] += a[0] * bs[4][9];
      c[10] += a[0] * bs[4][10];
      c[11] += a[0] * bs[4][11];
      c[12] += a[0] * bs[4][12];
      c[13] += a[0] * bs[4][13];
      c[14] += a[0] * bs[4][14];
      c[15] += a[0] * bs[4][15];
    } while (0);
    a[0] = A[0 * lda];
    do {
      c[0] += a[1] * bs[5][0];
      c[1] += a[1] * bs[5][1];
      c[2] += a[1] * bs[5][2];
      c[3] += a[1] * bs[5][3];
      c[4] += a[1] * bs[5][4];
      c[5] += a[1] * bs[5][5];
      c[6] += a[1] * bs[5][6];
      c[7] += a[1] * bs[5][7];
      c[8] += a[1] * bs[5][8];
      c[9] += a[1] * bs[5][9];
      c[10] += a[1] * bs[5][10];
      c[11] += a[1] * bs[5][11];
      c[12] += a[1] * bs[5][12];
      c[13] += a[1] * bs[5][13];
      c[14] += a[1] * bs[5][14];
      c[15] += a[1] * bs[5][15];
    } while (0);
    a[1] = A[1 * lda];
    do {
      c[0] += a[2] * bs[6][0];
      c[1] += a[2] * bs[6][1];
      c[2] += a[2] * bs[6][2];
      c[3] += a[2] * bs[6][3];
      c[4] += a[2] * bs[6][4];
      c[5] += a[2] * bs[6][5];
      c[6] += a[2] * bs[6][6];
      c[7] += a[2] * bs[6][7];
      c[8] += a[2] * bs[6][8];
      c[9] += a[2] * bs[6][9];
      c[10] += a[2] * bs[6][10];
      c[11] += a[2] * bs[6][11];
      c[12] += a[2] * bs[6][12];
      c[13] += a[2] * bs[6][13];
      c[14] += a[2] * bs[6][14];
      c[15] += a[2] * bs[6][15];
    } while (0);
    a[2] = A[2 * lda];
    do {
      c[0] += a[3] * bs[7][0];
      c[1] += a[3] * bs[7][1];
      c[2] += a[3] * bs[7][2];
      c[3] += a[3] * bs[7][3];
      c[4] += a[3] * bs[7][4];
      c[5] += a[3] * bs[7][5];
      c[6] += a[3] * bs[7][6];
      c[7] += a[3] * bs[7][7];
      c[8] += a[3] * bs[7][8];
      c[9] += a[3] * bs[7][9];
      c[10] += a[3] * bs[7][10];
      c[11] += a[3] * bs[7][11];
      c[12] += a[3] * bs[7][12];
      c[13] += a[3] * bs[7][13];
      c[14] += a[3] * bs[7][14];
      c[15] += a[3] * bs[7][15];
    } while (0);
    a[3] = A[3 * lda];

    A += 4 * lda;
    do {
      c[0] += a[0] * bs[8][0];
      c[1] += a[0] * bs[8][1];
      c[2] += a[0] * bs[8][2];
      c[3] += a[0] * bs[8][3];
      c[4] += a[0] * bs[8][4];
      c[5] += a[0] * bs[8][5];
      c[6] += a[0] * bs[8][6];
      c[7] += a[0] * bs[8][7];
      c[8] += a[0] * bs[8][8];
      c[9] += a[0] * bs[8][9];
      c[10] += a[0] * bs[8][10];
      c[11] += a[0] * bs[8][11];
      c[12] += a[0] * bs[8][12];
      c[13] += a[0] * bs[8][13];
      c[14] += a[0] * bs[8][14];
      c[15] += a[0] * bs[8][15];
    } while (0);
    a[0] = A[0 * lda];
    do {
      c[0] += a[1] * bs[9][0];
      c[1] += a[1] * bs[9][1];
      c[2] += a[1] * bs[9][2];
      c[3] += a[1] * bs[9][3];
      c[4] += a[1] * bs[9][4];
      c[5] += a[1] * bs[9][5];
      c[6] += a[1] * bs[9][6];
      c[7] += a[1] * bs[9][7];
      c[8] += a[1] * bs[9][8];
      c[9] += a[1] * bs[9][9];
      c[10] += a[1] * bs[9][10];
      c[11] += a[1] * bs[9][11];
      c[12] += a[1] * bs[9][12];
      c[13] += a[1] * bs[9][13];
      c[14] += a[1] * bs[9][14];
      c[15] += a[1] * bs[9][15];
    } while (0);
    a[1] = A[1 * lda];
    do {
      c[0] += a[2] * bs[10][0];
      c[1] += a[2] * bs[10][1];
      c[2] += a[2] * bs[10][2];
      c[3] += a[2] * bs[10][3];
      c[4] += a[2] * bs[10][4];
      c[5] += a[2] * bs[10][5];
      c[6] += a[2] * bs[10][6];
      c[7] += a[2] * bs[10][7];
      c[8] += a[2] * bs[10][8];
      c[9] += a[2] * bs[10][9];
      c[10] += a[2] * bs[10][10];
      c[11] += a[2] * bs[10][11];
      c[12] += a[2] * bs[10][12];
      c[13] += a[2] * bs[10][13];
      c[14] += a[2] * bs[10][14];
      c[15] += a[2] * bs[10][15];
    } while (0);
    a[2] = A[2 * lda];
    do {
      c[0] += a[3] * bs[11][0];
      c[1] += a[3] * bs[11][1];
      c[2] += a[3] * bs[11][2];
      c[3] += a[3] * bs[11][3];
      c[4] += a[3] * bs[11][4];
      c[5] += a[3] * bs[11][5];
      c[6] += a[3] * bs[11][6];
      c[7] += a[3] * bs[11][7];
      c[8] += a[3] * bs[11][8];
      c[9] += a[3] * bs[11][9];
      c[10] += a[3] * bs[11][10];
      c[11] += a[3] * bs[11][11];
      c[12] += a[3] * bs[11][12];
      c[13] += a[3] * bs[11][13];
      c[14] += a[3] * bs[11][14];
      c[15] += a[3] * bs[11][15];
    } while (0);
    a[3] = A[3 * lda];

    A += 4 * lda;
    do {
      c[0] += a[0] * bs[12][0];
      c[1] += a[0] * bs[12][1];
      c[2] += a[0] * bs[12][2];
      c[3] += a[0] * bs[12][3];
      c[4] += a[0] * bs[12][4];
      c[5] += a[0] * bs[12][5];
      c[6] += a[0] * bs[12][6];
      c[7] += a[0] * bs[12][7];
      c[8] += a[0] * bs[12][8];
      c[9] += a[0] * bs[12][9];
      c[10] += a[0] * bs[12][10];
      c[11] += a[0] * bs[12][11];
      c[12] += a[0] * bs[12][12];
      c[13] += a[0] * bs[12][13];
      c[14] += a[0] * bs[12][14];
      c[15] += a[0] * bs[12][15];
    } while (0);
    do {
      c[0] += a[1] * bs[13][0];
      c[1] += a[1] * bs[13][1];
      c[2] += a[1] * bs[13][2];
      c[3] += a[1] * bs[13][3];
      c[4] += a[1] * bs[13][4];
      c[5] += a[1] * bs[13][5];
      c[6] += a[1] * bs[13][6];
      c[7] += a[1] * bs[13][7];
      c[8] += a[1] * bs[13][8];
      c[9] += a[1] * bs[13][9];
      c[10] += a[1] * bs[13][10];
      c[11] += a[1] * bs[13][11];
      c[12] += a[1] * bs[13][12];
      c[13] += a[1] * bs[13][13];
      c[14] += a[1] * bs[13][14];
      c[15] += a[1] * bs[13][15];
    } while (0);
    do {
      c[0] += a[2] * bs[14][0];
      c[1] += a[2] * bs[14][1];
      c[2] += a[2] * bs[14][2];
      c[3] += a[2] * bs[14][3];
      c[4] += a[2] * bs[14][4];
      c[5] += a[2] * bs[14][5];
      c[6] += a[2] * bs[14][6];
      c[7] += a[2] * bs[14][7];
      c[8] += a[2] * bs[14][8];
      c[9] += a[2] * bs[14][9];
      c[10] += a[2] * bs[14][10];
      c[11] += a[2] * bs[14][11];
      c[12] += a[2] * bs[14][12];
      c[13] += a[2] * bs[14][13];
      c[14] += a[2] * bs[14][14];
      c[15] += a[2] * bs[14][15];
    } while (0);
    do {
      c[0] += a[3] * bs[15][0];
      c[1] += a[3] * bs[15][1];
      c[2] += a[3] * bs[15][2];
      c[3] += a[3] * bs[15][3];
      c[4] += a[3] * bs[15][4];
      c[5] += a[3] * bs[15][5];
      c[6] += a[3] * bs[15][6];
      c[7] += a[3] * bs[15][7];
      c[8] += a[3] * bs[15][8];
      c[9] += a[3] * bs[15][9];
      c[10] += a[3] * bs[15][10];
      c[11] += a[3] * bs[15][11];
      c[12] += a[3] * bs[15][12];
      c[13] += a[3] * bs[15][13];
      c[14] += a[3] * bs[15][14];
      c[15] += a[3] * bs[15][15];
    } while (0);

    B += 16;
    counter += 16;
    barrier(0x01);
  } while (counter < k);

  for (int i = 0; i < 16; i++, C += ldc) {
    C[0] = alpha * c[i] + beta * C[0];
  }
}
